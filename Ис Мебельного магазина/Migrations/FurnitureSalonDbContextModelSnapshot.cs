// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Ис_Мебельного_магазина;

#nullable disable

namespace Ис_Мебельного_магазина.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class FurnitureSalonDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ис_Мебельного_магазина.Domain.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Description")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("ExtraCharge")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("NameCategory")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("CategoryId");

                    b.ToTable("categories");
                });

            modelBuilder.Entity("Ис_Мебельного_магазина.Domain.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("BirthDay")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Name")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("PositionCode")
                        .HasMaxLength(40)
                        .HasColumnType("int");

                    b.Property<int?>("PostId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("employees");
                });

            modelBuilder.Entity("Ис_Мебельного_магазина.Domain.Models.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PostId"));

                    b.Property<string>("NamePost")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("PercentageOfSales")
                        .HasMaxLength(40)
                        .HasColumnType("int");

                    b.Property<string>("Salage")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("PostId");

                    b.ToTable("posts");
                });

            modelBuilder.Entity("Ис_Мебельного_магазина.Domain.Models.Provider", b =>
                {
                    b.Property<int>("IdProvider")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProvider"));

                    b.Property<int>("Fax")
                        .HasMaxLength(40)
                        .HasColumnType("int");

                    b.Property<int>("Inn")
                        .HasMaxLength(40)
                        .HasColumnType("int");

                    b.Property<string>("NameProvider")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("Number")
                        .HasMaxLength(40)
                        .HasColumnType("int");

                    b.Property<string>("additionally")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("IdProvider");

                    b.ToTable("providers");
                });

            modelBuilder.Entity("Ис_Мебельного_магазина.Domain.Models.PurchaseOfGoods", b =>
                {
                    b.Property<int>("PurchaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurchaseId"));

                    b.Property<string>("PurchaseDescription")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("PurchasePrise")
                        .HasMaxLength(40)
                        .HasColumnType("int");

                    b.Property<string>("PurchaseType")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("PurchaseVolume")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("categoriesCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("providersIdProvider")
                        .HasColumnType("int");

                    b.HasKey("PurchaseId");

                    b.HasIndex("categoriesCategoryId");

                    b.HasIndex("providersIdProvider");

                    b.ToTable("purchaseOfGoods");
                });

            modelBuilder.Entity("Ис_Мебельного_магазина.Domain.Models.Realization", b =>
                {
                    b.Property<int>("RealizationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RealizationId"));

                    b.Property<DateTime>("DateOfSale")
                        .HasMaxLength(40)
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("PurchaseOfGoodsPurchaseId")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasMaxLength(40)
                        .HasColumnType("int");

                    b.Property<int>("total")
                        .HasMaxLength(40)
                        .HasColumnType("int");

                    b.HasKey("RealizationId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PurchaseOfGoodsPurchaseId");

                    b.ToTable("realizations");
                });

            modelBuilder.Entity("Ис_Мебельного_магазина.Domain.Models.Employee", b =>
                {
                    b.HasOne("Ис_Мебельного_магазина.Domain.Models.Post", null)
                        .WithMany("employee")
                        .HasForeignKey("PostId");
                });

            modelBuilder.Entity("Ис_Мебельного_магазина.Domain.Models.PurchaseOfGoods", b =>
                {
                    b.HasOne("Ис_Мебельного_магазина.Domain.Models.Category", "categories")
                        .WithMany("purchaseOfGoods")
                        .HasForeignKey("categoriesCategoryId");

                    b.HasOne("Ис_Мебельного_магазина.Domain.Models.Provider", "providers")
                        .WithMany("purchaseOfGoods")
                        .HasForeignKey("providersIdProvider");

                    b.Navigation("categories");

                    b.Navigation("providers");
                });

            modelBuilder.Entity("Ис_Мебельного_магазина.Domain.Models.Realization", b =>
                {
                    b.HasOne("Ис_Мебельного_магазина.Domain.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("Ис_Мебельного_магазина.Domain.Models.PurchaseOfGoods", null)
                        .WithMany("realizations")
                        .HasForeignKey("PurchaseOfGoodsPurchaseId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Ис_Мебельного_магазина.Domain.Models.Category", b =>
                {
                    b.Navigation("purchaseOfGoods");
                });

            modelBuilder.Entity("Ис_Мебельного_магазина.Domain.Models.Post", b =>
                {
                    b.Navigation("employee");
                });

            modelBuilder.Entity("Ис_Мебельного_магазина.Domain.Models.Provider", b =>
                {
                    b.Navigation("purchaseOfGoods");
                });

            modelBuilder.Entity("Ис_Мебельного_магазина.Domain.Models.PurchaseOfGoods", b =>
                {
                    b.Navigation("realizations");
                });
#pragma warning restore 612, 618
        }
    }
}
